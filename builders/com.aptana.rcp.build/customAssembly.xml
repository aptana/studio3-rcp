<project name="customAsembly overrides" default="noDefault">
	<import file="${eclipse.pdebuild.templates}/headless-build/customAssembly.xml" />

	<!-- ===================================================================== -->
	<!-- Called after invoking the gather.bin.parts targets for all plugins    -->
	<!-- and features. Results exist as folders and have not yet been jarred.  -->
	<!-- ===================================================================== -->
	<target name="post.gather.bin.parts">
		<antcall target="insert.info.plist" />
	</target>

	<target name="insert.info.plist" unless="dont.modify.binaries">
		<!-- =========== Mac 64-bit Mangling ==================================================== -->
		<!-- Unzip the macosx launcher to a temp dir... -->
		<!-- cocoa -->
		<echo message="Mac 64-bit Mangling" />
		<pathconvert property="mac64.cocoa.launcher">
			<fileset dir="buildRepo/binary">
				<include name="org.eclipse.equinox.executable_root.cocoa.macosx.x86_64_*" />
			</fileset>
			<mapper>
				<flattenmapper />
			</mapper>
		</pathconvert>
		<property name="mac64.cocoa.launcher.dir" location="${buildDirectory}/tmp_mac64_launcher/${mac64.cocoa.launcher}" />
		<mkdir dir="${mac64.cocoa.launcher.dir}" />
		<unzip src="buildRepo/binary/${mac64.cocoa.launcher}" dest="${mac64.cocoa.launcher.dir}" />
		<delete file="buildRepo/binary/${mac64.cocoa.launcher}" />
		<!-- ...add our custom modifications... -->
		<copy file="${builder}/custom/macosx/Info.plist" tofile="${mac64.cocoa.launcher.dir}/Eclipse.app/Contents/Info.plist" overwrite="true" />
		<!-- ...then re-zip and delete the temp dir -->
		<zip destfile="buildRepo/binary/${mac64.cocoa.launcher}">
			<fileset dir="${mac64.cocoa.launcher.dir}" defaultexcludes="false" />
		</zip>
		<delete dir="${mac64.cocoa.launcher.dir}" />
		<delete dir="${buildDirectory}/tmp_mac64_launcher" />
	</target>

	<!-- ===================================================================== -->
	<!-- Called just before the archive file is built                          -->
	<!-- In addititon to the properties listed above:						   -->
	<!--    - rootFolder : the folder containing the root files                -->
	<!-- ===================================================================== -->
	<target name="pre.archive">
		<antcall target="fix.broken.dropins">
			<param name="p2.director.install.path" value="${buildDirectory}/tmp/${collectingFolder}" />
		</antcall>
		<antcall target="insert.param.name" />
	</target>

	<target name="fix.broken.dropins">
		<!-- Forcibly change the dropins plugin to start, in case we failed due to: https://bugs.eclipse.org/bugs/show_bug.cgi?id=252284! -->
		<replaceregexp file="${p2.director.install.path}/configuration/org.eclipse.equinox.simpleconfigurator/bundles.info" match="${dropins.plugin}.jar,4,false" replace="${dropins.plugin}.jar,4,true" />
		<!-- Make sure there's a dropins folder in case it failed due to same bug above -->
		<mkdir dir="${p2.director.install.path}/dropins" />
	</target>

	<!-- Insert the -name argument manually since Eclipse builder seems to ignore it -->
	<target name="insert.param.name" depends="ini.check" if="ini.exists">
		<replace summary="yes" file="${buildDirectory}/tmp/${collectingFolder}/${product.name}.ini" token="-vmargs">
			<replacevalue><![CDATA[-name
Aptana Studio 3
-vmargs]]></replacevalue>
		</replace>
	</target>
	<target name="ini.check">
		<available file="${buildDirectory}/tmp/${collectingFolder}/${product.name}.ini" property="ini.exists" />
	</target>
</project>
